name: 🔖 Auto Version in PR Branch

on:
  pull_request:
    branches:
      - main

jobs:
  auto-version:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # Checkout the PR branch

      - name: 🔧 Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: 📡 Get latest published version from npm
        id: latest_version
        run: |
          LATEST_VERSION=$(npm show $(jq -r .name package.json) version || echo "0.1.0")
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_ENV

      - name: 📄 Get current package.json version
        id: package_version
        run: |
          CURRENT_VERSION=$(jq -r .version ./packages/core/package.json)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: 🔍 Compare Versions
        id: compare_versions
        run: |
          if [[ "$latest_version" == "$current_version" ]]; then
            echo "needs_bump=true" >> $GITHUB_ENV  # Versions are equal
          elif [[ "$latest_version" < "$current_version" ]]; then # String comparison, may not work correctly for all version formats
            echo "needs_bump=false" >> $GITHUB_ENV
          else
            echo "needs_bump=true" >> $GITHUB_ENV   # latest_version is greater than current_version
          fi

      - name: 📂 Get pnpm store directory
        if: env.needs_bump == 'true'
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: ⚡ Setup pnpm cache
        uses: actions/cache@v4
        if: env.needs_bump == 'true'
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📥 Install dependencies
        if: env.needs_bump == 'true'
        run: pnpm install --filter=@cano-ts/core

      - name: 📝 Ensure Changelog Exists
        if: env.needs_bump == 'true'
        run: touch CHANGELOG.md

      - name: 🚀 Bump Version with Changeset
        if: env.needs_bump == 'true'
        run: pnpm changeset version

      - name: 🔢 Get New Version
        if: env.needs_bump == 'true'
        run: |
          echo "NEW_VERSION=$(jq -r .version ./packages/core/package.json)" >> $GITHUB_ENV

      - name: ✨ Set new version on root "package.json"
        if: env.needs_bump == 'true'
        run: pnpm run update:root:version

      - name: 🔎 Run Lint
        if: env.needs_bump == 'true'
        run: pnpm run lint

      - name: 🔧 Configure Git
        if: env.needs_bump == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: 📌 Commit Changes
        if: env.needs_bump == 'true'
        run: |
          git add .
          git commit -m "🔖 \`v${{ env.NEW_VERSION }}\`"

      - name: ⬆️ Push Changes
        if: env.needs_bump == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin HEAD:${{ github.head_ref }}

  trigger:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs: auto-version
    steps:
      - name: 🤡 Trigger integration tests
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/integration-tests.yaml/dispatches \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref":"${{ github.head_ref }}"}'

      - name: 🚨 Trigger linting
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/lint.yaml/dispatches \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref":"${{ github.head_ref }}"}'

      - name: ✅ Trigger build tests
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/test-build.yaml/dispatches \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref":"${{ github.head_ref }}"}'

      - name: 🏷️ Trigger type-safety checks
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/type-safe.yaml/dispatches \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref":"${{ github.head_ref }}"}'

      - name: 🧪 Trigger unit tests
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/unit-tests.yaml/dispatches \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref":"${{ github.head_ref }}"}'
